// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	appconfig "github.com/transcom/mymove/pkg/appconfig"
	auth "github.com/transcom/mymove/pkg/auth"

	mock "github.com/stretchr/testify/mock"

	models "github.com/transcom/mymove/pkg/models"

	uuid "github.com/gofrs/uuid"
)

// MTOShipmentUpdater is an autogenerated mock type for the MTOShipmentUpdater type
type MTOShipmentUpdater struct {
	mock.Mock
}

// CheckIfMTOShipmentCanBeUpdated provides a mock function with given fields: appCfg, mtoShipment, session
func (_m *MTOShipmentUpdater) CheckIfMTOShipmentCanBeUpdated(appCfg appconfig.AppConfig, mtoShipment *models.MTOShipment, session *auth.Session) (bool, error) {
	ret := _m.Called(appCfg, mtoShipment, session)

	var r0 bool
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment, *auth.Session) bool); ok {
		r0 = rf(appCfg, mtoShipment, session)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appconfig.AppConfig, *models.MTOShipment, *auth.Session) error); ok {
		r1 = rf(appCfg, mtoShipment, session)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MTOShipmentsMTOAvailableToPrime provides a mock function with given fields: appCfg, mtoShipmentID
func (_m *MTOShipmentUpdater) MTOShipmentsMTOAvailableToPrime(appCfg appconfig.AppConfig, mtoShipmentID uuid.UUID) (bool, error) {
	ret := _m.Called(appCfg, mtoShipmentID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, uuid.UUID) bool); ok {
		r0 = rf(appCfg, mtoShipmentID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appconfig.AppConfig, uuid.UUID) error); ok {
		r1 = rf(appCfg, mtoShipmentID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrieveMTOShipment provides a mock function with given fields: appCfg, mtoShipmentID
func (_m *MTOShipmentUpdater) RetrieveMTOShipment(appCfg appconfig.AppConfig, mtoShipmentID uuid.UUID) (*models.MTOShipment, error) {
	ret := _m.Called(appCfg, mtoShipmentID)

	var r0 *models.MTOShipment
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, uuid.UUID) *models.MTOShipment); ok {
		r0 = rf(appCfg, mtoShipmentID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.MTOShipment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appconfig.AppConfig, uuid.UUID) error); ok {
		r1 = rf(appCfg, mtoShipmentID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateMTOShipmentCustomer provides a mock function with given fields: appCfg, mtoShipment, eTag
func (_m *MTOShipmentUpdater) UpdateMTOShipmentCustomer(appCfg appconfig.AppConfig, mtoShipment *models.MTOShipment, eTag string) (*models.MTOShipment, error) {
	ret := _m.Called(appCfg, mtoShipment, eTag)

	var r0 *models.MTOShipment
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment, string) *models.MTOShipment); ok {
		r0 = rf(appCfg, mtoShipment, eTag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.MTOShipment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appconfig.AppConfig, *models.MTOShipment, string) error); ok {
		r1 = rf(appCfg, mtoShipment, eTag)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateMTOShipmentOffice provides a mock function with given fields: appCfg, mtoShipment, eTag
func (_m *MTOShipmentUpdater) UpdateMTOShipmentOffice(appCfg appconfig.AppConfig, mtoShipment *models.MTOShipment, eTag string) (*models.MTOShipment, error) {
	ret := _m.Called(appCfg, mtoShipment, eTag)

	var r0 *models.MTOShipment
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment, string) *models.MTOShipment); ok {
		r0 = rf(appCfg, mtoShipment, eTag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.MTOShipment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appconfig.AppConfig, *models.MTOShipment, string) error); ok {
		r1 = rf(appCfg, mtoShipment, eTag)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateMTOShipmentPrime provides a mock function with given fields: appCfg, mtoShipment, eTag
func (_m *MTOShipmentUpdater) UpdateMTOShipmentPrime(appCfg appconfig.AppConfig, mtoShipment *models.MTOShipment, eTag string) (*models.MTOShipment, error) {
	ret := _m.Called(appCfg, mtoShipment, eTag)

	var r0 *models.MTOShipment
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment, string) *models.MTOShipment); ok {
		r0 = rf(appCfg, mtoShipment, eTag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.MTOShipment)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(appconfig.AppConfig, *models.MTOShipment, string) error); ok {
		r1 = rf(appCfg, mtoShipment, eTag)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
