// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	appconfig "github.com/transcom/mymove/pkg/appconfig"

	models "github.com/transcom/mymove/pkg/models"
)

// ShipmentRouter is an autogenerated mock type for the ShipmentRouter type
type ShipmentRouter struct {
	mock.Mock
}

// Approve provides a mock function with given fields: appCfg, shipment
func (_m *ShipmentRouter) Approve(appCfg appconfig.AppConfig, shipment *models.MTOShipment) error {
	ret := _m.Called(appCfg, shipment)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment) error); ok {
		r0 = rf(appCfg, shipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ApproveDiversion provides a mock function with given fields: appCfg, shipment
func (_m *ShipmentRouter) ApproveDiversion(appCfg appconfig.AppConfig, shipment *models.MTOShipment) error {
	ret := _m.Called(appCfg, shipment)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment) error); ok {
		r0 = rf(appCfg, shipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Cancel provides a mock function with given fields: appCfg, shipment
func (_m *ShipmentRouter) Cancel(appCfg appconfig.AppConfig, shipment *models.MTOShipment) error {
	ret := _m.Called(appCfg, shipment)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment) error); ok {
		r0 = rf(appCfg, shipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Reject provides a mock function with given fields: appCfg, shipment, rejectionReason
func (_m *ShipmentRouter) Reject(appCfg appconfig.AppConfig, shipment *models.MTOShipment, rejectionReason *string) error {
	ret := _m.Called(appCfg, shipment, rejectionReason)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment, *string) error); ok {
		r0 = rf(appCfg, shipment, rejectionReason)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RequestCancellation provides a mock function with given fields: appCfg, shipment
func (_m *ShipmentRouter) RequestCancellation(appCfg appconfig.AppConfig, shipment *models.MTOShipment) error {
	ret := _m.Called(appCfg, shipment)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment) error); ok {
		r0 = rf(appCfg, shipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RequestDiversion provides a mock function with given fields: appCfg, shipment
func (_m *ShipmentRouter) RequestDiversion(appCfg appconfig.AppConfig, shipment *models.MTOShipment) error {
	ret := _m.Called(appCfg, shipment)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment) error); ok {
		r0 = rf(appCfg, shipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Submit provides a mock function with given fields: appCfg, shipment
func (_m *ShipmentRouter) Submit(appCfg appconfig.AppConfig, shipment *models.MTOShipment) error {
	ret := _m.Called(appCfg, shipment)

	var r0 error
	if rf, ok := ret.Get(0).(func(appconfig.AppConfig, *models.MTOShipment) error); ok {
		r0 = rf(appCfg, shipment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
