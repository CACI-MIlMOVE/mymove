// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/supportmessages"
)

// HideMoveTaskOrderOKCode is the HTTP code returned for type HideMoveTaskOrderOK
const HideMoveTaskOrderOKCode int = 200

/*HideMoveTaskOrderOK Successfully hid MTO.

swagger:response hideMoveTaskOrderOK
*/
type HideMoveTaskOrderOK struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.MoveTaskOrder `json:"body,omitempty"`
}

// NewHideMoveTaskOrderOK creates HideMoveTaskOrderOK with default headers values
func NewHideMoveTaskOrderOK() *HideMoveTaskOrderOK {

	return &HideMoveTaskOrderOK{}
}

// WithPayload adds the payload to the hide move task order o k response
func (o *HideMoveTaskOrderOK) WithPayload(payload *supportmessages.MoveTaskOrder) *HideMoveTaskOrderOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order o k response
func (o *HideMoveTaskOrderOK) SetPayload(payload *supportmessages.MoveTaskOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderBadRequestCode is the HTTP code returned for type HideMoveTaskOrderBadRequest
const HideMoveTaskOrderBadRequestCode int = 400

/*HideMoveTaskOrderBadRequest The request payload is invalid.

swagger:response hideMoveTaskOrderBadRequest
*/
type HideMoveTaskOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideMoveTaskOrderBadRequest creates HideMoveTaskOrderBadRequest with default headers values
func NewHideMoveTaskOrderBadRequest() *HideMoveTaskOrderBadRequest {

	return &HideMoveTaskOrderBadRequest{}
}

// WithPayload adds the payload to the hide move task order bad request response
func (o *HideMoveTaskOrderBadRequest) WithPayload(payload *supportmessages.ClientError) *HideMoveTaskOrderBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order bad request response
func (o *HideMoveTaskOrderBadRequest) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderUnauthorizedCode is the HTTP code returned for type HideMoveTaskOrderUnauthorized
const HideMoveTaskOrderUnauthorizedCode int = 401

/*HideMoveTaskOrderUnauthorized The request was denied.

swagger:response hideMoveTaskOrderUnauthorized
*/
type HideMoveTaskOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideMoveTaskOrderUnauthorized creates HideMoveTaskOrderUnauthorized with default headers values
func NewHideMoveTaskOrderUnauthorized() *HideMoveTaskOrderUnauthorized {

	return &HideMoveTaskOrderUnauthorized{}
}

// WithPayload adds the payload to the hide move task order unauthorized response
func (o *HideMoveTaskOrderUnauthorized) WithPayload(payload *supportmessages.ClientError) *HideMoveTaskOrderUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order unauthorized response
func (o *HideMoveTaskOrderUnauthorized) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderForbiddenCode is the HTTP code returned for type HideMoveTaskOrderForbidden
const HideMoveTaskOrderForbiddenCode int = 403

/*HideMoveTaskOrderForbidden The request was denied.

swagger:response hideMoveTaskOrderForbidden
*/
type HideMoveTaskOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideMoveTaskOrderForbidden creates HideMoveTaskOrderForbidden with default headers values
func NewHideMoveTaskOrderForbidden() *HideMoveTaskOrderForbidden {

	return &HideMoveTaskOrderForbidden{}
}

// WithPayload adds the payload to the hide move task order forbidden response
func (o *HideMoveTaskOrderForbidden) WithPayload(payload *supportmessages.ClientError) *HideMoveTaskOrderForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order forbidden response
func (o *HideMoveTaskOrderForbidden) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderNotFoundCode is the HTTP code returned for type HideMoveTaskOrderNotFound
const HideMoveTaskOrderNotFoundCode int = 404

/*HideMoveTaskOrderNotFound The requested resource wasn't found.

swagger:response hideMoveTaskOrderNotFound
*/
type HideMoveTaskOrderNotFound struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideMoveTaskOrderNotFound creates HideMoveTaskOrderNotFound with default headers values
func NewHideMoveTaskOrderNotFound() *HideMoveTaskOrderNotFound {

	return &HideMoveTaskOrderNotFound{}
}

// WithPayload adds the payload to the hide move task order not found response
func (o *HideMoveTaskOrderNotFound) WithPayload(payload *supportmessages.ClientError) *HideMoveTaskOrderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order not found response
func (o *HideMoveTaskOrderNotFound) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderPreconditionFailedCode is the HTTP code returned for type HideMoveTaskOrderPreconditionFailed
const HideMoveTaskOrderPreconditionFailedCode int = 412

/*HideMoveTaskOrderPreconditionFailed Precondition failed, likely due to a stale eTag (If-Match). Fetch the request again to get the updated eTag value.

swagger:response hideMoveTaskOrderPreconditionFailed
*/
type HideMoveTaskOrderPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ClientError `json:"body,omitempty"`
}

// NewHideMoveTaskOrderPreconditionFailed creates HideMoveTaskOrderPreconditionFailed with default headers values
func NewHideMoveTaskOrderPreconditionFailed() *HideMoveTaskOrderPreconditionFailed {

	return &HideMoveTaskOrderPreconditionFailed{}
}

// WithPayload adds the payload to the hide move task order precondition failed response
func (o *HideMoveTaskOrderPreconditionFailed) WithPayload(payload *supportmessages.ClientError) *HideMoveTaskOrderPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order precondition failed response
func (o *HideMoveTaskOrderPreconditionFailed) SetPayload(payload *supportmessages.ClientError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderUnprocessableEntityCode is the HTTP code returned for type HideMoveTaskOrderUnprocessableEntity
const HideMoveTaskOrderUnprocessableEntityCode int = 422

/*HideMoveTaskOrderUnprocessableEntity The payload was unprocessable.

swagger:response hideMoveTaskOrderUnprocessableEntity
*/
type HideMoveTaskOrderUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.ValidationError `json:"body,omitempty"`
}

// NewHideMoveTaskOrderUnprocessableEntity creates HideMoveTaskOrderUnprocessableEntity with default headers values
func NewHideMoveTaskOrderUnprocessableEntity() *HideMoveTaskOrderUnprocessableEntity {

	return &HideMoveTaskOrderUnprocessableEntity{}
}

// WithPayload adds the payload to the hide move task order unprocessable entity response
func (o *HideMoveTaskOrderUnprocessableEntity) WithPayload(payload *supportmessages.ValidationError) *HideMoveTaskOrderUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order unprocessable entity response
func (o *HideMoveTaskOrderUnprocessableEntity) SetPayload(payload *supportmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HideMoveTaskOrderInternalServerErrorCode is the HTTP code returned for type HideMoveTaskOrderInternalServerError
const HideMoveTaskOrderInternalServerErrorCode int = 500

/*HideMoveTaskOrderInternalServerError A server error occurred.

swagger:response hideMoveTaskOrderInternalServerError
*/
type HideMoveTaskOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *supportmessages.Error `json:"body,omitempty"`
}

// NewHideMoveTaskOrderInternalServerError creates HideMoveTaskOrderInternalServerError with default headers values
func NewHideMoveTaskOrderInternalServerError() *HideMoveTaskOrderInternalServerError {

	return &HideMoveTaskOrderInternalServerError{}
}

// WithPayload adds the payload to the hide move task order internal server error response
func (o *HideMoveTaskOrderInternalServerError) WithPayload(payload *supportmessages.Error) *HideMoveTaskOrderInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the hide move task order internal server error response
func (o *HideMoveTaskOrderInternalServerError) SetPayload(payload *supportmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HideMoveTaskOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
