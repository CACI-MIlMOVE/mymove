// Code generated by go-swagger; DO NOT EDIT.

package payment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetMTOPaymentRequestsHandlerFunc turns a function with the right signature into a get m t o payment requests handler
type GetMTOPaymentRequestsHandlerFunc func(GetMTOPaymentRequestsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMTOPaymentRequestsHandlerFunc) Handle(params GetMTOPaymentRequestsParams) middleware.Responder {
	return fn(params)
}

// GetMTOPaymentRequestsHandler interface for that can handle valid get m t o payment requests params
type GetMTOPaymentRequestsHandler interface {
	Handle(GetMTOPaymentRequestsParams) middleware.Responder
}

// NewGetMTOPaymentRequests creates a new http.Handler for the get m t o payment requests operation
func NewGetMTOPaymentRequests(ctx *middleware.Context, handler GetMTOPaymentRequestsHandler) *GetMTOPaymentRequests {
	return &GetMTOPaymentRequests{Context: ctx, Handler: handler}
}

/*GetMTOPaymentRequests swagger:route GET /move-task-orders/{moveTaskOrderID}/payment-requests paymentRequests getMTOPaymentRequests

getMTOPaymentRequests

Gets all payment requests for a given move task order


*/
type GetMTOPaymentRequests struct {
	Context *middleware.Context
	Handler GetMTOPaymentRequestsHandler
}

func (o *GetMTOPaymentRequests) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMTOPaymentRequestsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
