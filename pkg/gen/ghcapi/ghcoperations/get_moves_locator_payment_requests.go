// Code generated by go-swagger; DO NOT EDIT.

package ghcoperations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetMovesLocatorPaymentRequestsHandlerFunc turns a function with the right signature into a get moves locator payment requests handler
type GetMovesLocatorPaymentRequestsHandlerFunc func(GetMovesLocatorPaymentRequestsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMovesLocatorPaymentRequestsHandlerFunc) Handle(params GetMovesLocatorPaymentRequestsParams) middleware.Responder {
	return fn(params)
}

// GetMovesLocatorPaymentRequestsHandler interface for that can handle valid get moves locator payment requests params
type GetMovesLocatorPaymentRequestsHandler interface {
	Handle(GetMovesLocatorPaymentRequestsParams) middleware.Responder
}

// NewGetMovesLocatorPaymentRequests creates a new http.Handler for the get moves locator payment requests operation
func NewGetMovesLocatorPaymentRequests(ctx *middleware.Context, handler GetMovesLocatorPaymentRequestsHandler) *GetMovesLocatorPaymentRequests {
	return &GetMovesLocatorPaymentRequests{Context: ctx, Handler: handler}
}

/*GetMovesLocatorPaymentRequests swagger:route GET /moves/{locator}/payment-requests getMovesLocatorPaymentRequests

GetMovesLocatorPaymentRequests get moves locator payment requests API

*/
type GetMovesLocatorPaymentRequests struct {
	Context *middleware.Context
	Handler GetMovesLocatorPaymentRequestsHandler
}

func (o *GetMovesLocatorPaymentRequests) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMovesLocatorPaymentRequestsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
