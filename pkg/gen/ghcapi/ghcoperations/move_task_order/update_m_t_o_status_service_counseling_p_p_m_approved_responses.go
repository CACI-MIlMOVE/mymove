// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// UpdateMTOStatusServiceCounselingPPMApprovedOKCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedOK
const UpdateMTOStatusServiceCounselingPPMApprovedOKCode int = 200

/*UpdateMTOStatusServiceCounselingPPMApprovedOK Successfully updated move task order status

swagger:response updateMTOStatusServiceCounselingPPMApprovedOK
*/
type UpdateMTOStatusServiceCounselingPPMApprovedOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Move `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedOK creates UpdateMTOStatusServiceCounselingPPMApprovedOK with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedOK() *UpdateMTOStatusServiceCounselingPPMApprovedOK {

	return &UpdateMTOStatusServiceCounselingPPMApprovedOK{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved o k response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedOK) WithPayload(payload *ghcmessages.Move) *UpdateMTOStatusServiceCounselingPPMApprovedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved o k response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedOK) SetPayload(payload *ghcmessages.Move) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedBadRequestCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedBadRequest
const UpdateMTOStatusServiceCounselingPPMApprovedBadRequestCode int = 400

/*UpdateMTOStatusServiceCounselingPPMApprovedBadRequest The request payload is invalid

swagger:response updateMTOStatusServiceCounselingPPMApprovedBadRequest
*/
type UpdateMTOStatusServiceCounselingPPMApprovedBadRequest struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedBadRequest creates UpdateMTOStatusServiceCounselingPPMApprovedBadRequest with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedBadRequest() *UpdateMTOStatusServiceCounselingPPMApprovedBadRequest {

	return &UpdateMTOStatusServiceCounselingPPMApprovedBadRequest{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved bad request response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedBadRequest) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved bad request response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedBadRequest) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedUnauthorizedCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized
const UpdateMTOStatusServiceCounselingPPMApprovedUnauthorizedCode int = 401

/*UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized The request was denied

swagger:response updateMTOStatusServiceCounselingPPMApprovedUnauthorized
*/
type UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedUnauthorized creates UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedUnauthorized() *UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized {

	return &UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved unauthorized response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved unauthorized response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedForbiddenCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedForbidden
const UpdateMTOStatusServiceCounselingPPMApprovedForbiddenCode int = 403

/*UpdateMTOStatusServiceCounselingPPMApprovedForbidden The request was denied

swagger:response updateMTOStatusServiceCounselingPPMApprovedForbidden
*/
type UpdateMTOStatusServiceCounselingPPMApprovedForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedForbidden creates UpdateMTOStatusServiceCounselingPPMApprovedForbidden with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedForbidden() *UpdateMTOStatusServiceCounselingPPMApprovedForbidden {

	return &UpdateMTOStatusServiceCounselingPPMApprovedForbidden{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved forbidden response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedForbidden) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved forbidden response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedNotFoundCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedNotFound
const UpdateMTOStatusServiceCounselingPPMApprovedNotFoundCode int = 404

/*UpdateMTOStatusServiceCounselingPPMApprovedNotFound The requested resource wasn't found

swagger:response updateMTOStatusServiceCounselingPPMApprovedNotFound
*/
type UpdateMTOStatusServiceCounselingPPMApprovedNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedNotFound creates UpdateMTOStatusServiceCounselingPPMApprovedNotFound with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedNotFound() *UpdateMTOStatusServiceCounselingPPMApprovedNotFound {

	return &UpdateMTOStatusServiceCounselingPPMApprovedNotFound{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved not found response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedNotFound) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved not found response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedConflictCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedConflict
const UpdateMTOStatusServiceCounselingPPMApprovedConflictCode int = 409

/*UpdateMTOStatusServiceCounselingPPMApprovedConflict Conflict error

swagger:response updateMTOStatusServiceCounselingPPMApprovedConflict
*/
type UpdateMTOStatusServiceCounselingPPMApprovedConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedConflict creates UpdateMTOStatusServiceCounselingPPMApprovedConflict with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedConflict() *UpdateMTOStatusServiceCounselingPPMApprovedConflict {

	return &UpdateMTOStatusServiceCounselingPPMApprovedConflict{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved conflict response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedConflict) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved conflict response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailedCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed
const UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailedCode int = 412

/*UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed Precondition failed

swagger:response updateMTOStatusServiceCounselingPPMApprovedPreconditionFailed
*/
type UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed creates UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed() *UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed {

	return &UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved precondition failed response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved precondition failed response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntityCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity
const UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntityCode int = 422

/*UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity The payload was unprocessable.

swagger:response updateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity
*/
type UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity creates UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity() *UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity {

	return &UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved unprocessable entity response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved unprocessable entity response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateMTOStatusServiceCounselingPPMApprovedInternalServerErrorCode is the HTTP code returned for type UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError
const UpdateMTOStatusServiceCounselingPPMApprovedInternalServerErrorCode int = 500

/*UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError A server error occurred

swagger:response updateMTOStatusServiceCounselingPPMApprovedInternalServerError
*/
type UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewUpdateMTOStatusServiceCounselingPPMApprovedInternalServerError creates UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError with default headers values
func NewUpdateMTOStatusServiceCounselingPPMApprovedInternalServerError() *UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError {

	return &UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError{}
}

// WithPayload adds the payload to the update m t o status service counseling p p m approved internal server error response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError) WithPayload(payload *ghcmessages.Error) *UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update m t o status service counseling p p m approved internal server error response
func (o *UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateMTOStatusServiceCounselingPPMApprovedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
