// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// GetMovePaymentRequestsOKCode is the HTTP code returned for type GetMovePaymentRequestsOK
const GetMovePaymentRequestsOKCode int = 200

/*GetMovePaymentRequestsOK Successfully retrieved payment requests

swagger:response getMovePaymentRequestsOK
*/
type GetMovePaymentRequestsOK struct {

	/*
	  In: Body
	*/
	Payload ghcmessages.PaymentRequests `json:"body,omitempty"`
}

// NewGetMovePaymentRequestsOK creates GetMovePaymentRequestsOK with default headers values
func NewGetMovePaymentRequestsOK() *GetMovePaymentRequestsOK {

	return &GetMovePaymentRequestsOK{}
}

// WithPayload adds the payload to the get move payment requests o k response
func (o *GetMovePaymentRequestsOK) WithPayload(payload ghcmessages.PaymentRequests) *GetMovePaymentRequestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move payment requests o k response
func (o *GetMovePaymentRequestsOK) SetPayload(payload ghcmessages.PaymentRequests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMovePaymentRequestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = ghcmessages.PaymentRequests{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMovePaymentRequestsBadRequestCode is the HTTP code returned for type GetMovePaymentRequestsBadRequest
const GetMovePaymentRequestsBadRequestCode int = 400

/*GetMovePaymentRequestsBadRequest The request payload is invalid

swagger:response getMovePaymentRequestsBadRequest
*/
type GetMovePaymentRequestsBadRequest struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMovePaymentRequestsBadRequest creates GetMovePaymentRequestsBadRequest with default headers values
func NewGetMovePaymentRequestsBadRequest() *GetMovePaymentRequestsBadRequest {

	return &GetMovePaymentRequestsBadRequest{}
}

// WithPayload adds the payload to the get move payment requests bad request response
func (o *GetMovePaymentRequestsBadRequest) WithPayload(payload interface{}) *GetMovePaymentRequestsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move payment requests bad request response
func (o *GetMovePaymentRequestsBadRequest) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMovePaymentRequestsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMovePaymentRequestsUnauthorizedCode is the HTTP code returned for type GetMovePaymentRequestsUnauthorized
const GetMovePaymentRequestsUnauthorizedCode int = 401

/*GetMovePaymentRequestsUnauthorized The request was denied

swagger:response getMovePaymentRequestsUnauthorized
*/
type GetMovePaymentRequestsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMovePaymentRequestsUnauthorized creates GetMovePaymentRequestsUnauthorized with default headers values
func NewGetMovePaymentRequestsUnauthorized() *GetMovePaymentRequestsUnauthorized {

	return &GetMovePaymentRequestsUnauthorized{}
}

// WithPayload adds the payload to the get move payment requests unauthorized response
func (o *GetMovePaymentRequestsUnauthorized) WithPayload(payload interface{}) *GetMovePaymentRequestsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move payment requests unauthorized response
func (o *GetMovePaymentRequestsUnauthorized) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMovePaymentRequestsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMovePaymentRequestsForbiddenCode is the HTTP code returned for type GetMovePaymentRequestsForbidden
const GetMovePaymentRequestsForbiddenCode int = 403

/*GetMovePaymentRequestsForbidden The request was denied

swagger:response getMovePaymentRequestsForbidden
*/
type GetMovePaymentRequestsForbidden struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMovePaymentRequestsForbidden creates GetMovePaymentRequestsForbidden with default headers values
func NewGetMovePaymentRequestsForbidden() *GetMovePaymentRequestsForbidden {

	return &GetMovePaymentRequestsForbidden{}
}

// WithPayload adds the payload to the get move payment requests forbidden response
func (o *GetMovePaymentRequestsForbidden) WithPayload(payload interface{}) *GetMovePaymentRequestsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move payment requests forbidden response
func (o *GetMovePaymentRequestsForbidden) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMovePaymentRequestsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMovePaymentRequestsNotFoundCode is the HTTP code returned for type GetMovePaymentRequestsNotFound
const GetMovePaymentRequestsNotFoundCode int = 404

/*GetMovePaymentRequestsNotFound The requested resource wasn't found

swagger:response getMovePaymentRequestsNotFound
*/
type GetMovePaymentRequestsNotFound struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMovePaymentRequestsNotFound creates GetMovePaymentRequestsNotFound with default headers values
func NewGetMovePaymentRequestsNotFound() *GetMovePaymentRequestsNotFound {

	return &GetMovePaymentRequestsNotFound{}
}

// WithPayload adds the payload to the get move payment requests not found response
func (o *GetMovePaymentRequestsNotFound) WithPayload(payload interface{}) *GetMovePaymentRequestsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move payment requests not found response
func (o *GetMovePaymentRequestsNotFound) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMovePaymentRequestsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetMovePaymentRequestsInternalServerErrorCode is the HTTP code returned for type GetMovePaymentRequestsInternalServerError
const GetMovePaymentRequestsInternalServerErrorCode int = 500

/*GetMovePaymentRequestsInternalServerError A server error occurred

swagger:response getMovePaymentRequestsInternalServerError
*/
type GetMovePaymentRequestsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewGetMovePaymentRequestsInternalServerError creates GetMovePaymentRequestsInternalServerError with default headers values
func NewGetMovePaymentRequestsInternalServerError() *GetMovePaymentRequestsInternalServerError {

	return &GetMovePaymentRequestsInternalServerError{}
}

// WithPayload adds the payload to the get move payment requests internal server error response
func (o *GetMovePaymentRequestsInternalServerError) WithPayload(payload interface{}) *GetMovePaymentRequestsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get move payment requests internal server error response
func (o *GetMovePaymentRequestsInternalServerError) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMovePaymentRequestsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
