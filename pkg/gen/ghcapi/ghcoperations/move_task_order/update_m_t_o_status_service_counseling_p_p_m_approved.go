// Code generated by go-swagger; DO NOT EDIT.

package move_task_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UpdateMTOStatusServiceCounselingPPMApprovedHandlerFunc turns a function with the right signature into a update m t o status service counseling p p m approved handler
type UpdateMTOStatusServiceCounselingPPMApprovedHandlerFunc func(UpdateMTOStatusServiceCounselingPPMApprovedParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMTOStatusServiceCounselingPPMApprovedHandlerFunc) Handle(params UpdateMTOStatusServiceCounselingPPMApprovedParams) middleware.Responder {
	return fn(params)
}

// UpdateMTOStatusServiceCounselingPPMApprovedHandler interface for that can handle valid update m t o status service counseling p p m approved params
type UpdateMTOStatusServiceCounselingPPMApprovedHandler interface {
	Handle(UpdateMTOStatusServiceCounselingPPMApprovedParams) middleware.Responder
}

// NewUpdateMTOStatusServiceCounselingPPMApproved creates a new http.Handler for the update m t o status service counseling p p m approved operation
func NewUpdateMTOStatusServiceCounselingPPMApproved(ctx *middleware.Context, handler UpdateMTOStatusServiceCounselingPPMApprovedHandler) *UpdateMTOStatusServiceCounselingPPMApproved {
	return &UpdateMTOStatusServiceCounselingPPMApproved{Context: ctx, Handler: handler}
}

/* UpdateMTOStatusServiceCounselingPPMApproved swagger:route PATCH /move-task-orders/{moveTaskOrderID}/status/service-counseling-ppm-approved moveTaskOrder updateMTOStatusServiceCounselingPPMApproved

Changes move (move task order) status to approved and PPM status to waiting on customer

Changes move (move task order) status to approved and PPM status to waiting on customer

*/
type UpdateMTOStatusServiceCounselingPPMApproved struct {
	Context *middleware.Context
	Handler UpdateMTOStatusServiceCounselingPPMApprovedHandler
}

func (o *UpdateMTOStatusServiceCounselingPPMApproved) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateMTOStatusServiceCounselingPPMApprovedParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
