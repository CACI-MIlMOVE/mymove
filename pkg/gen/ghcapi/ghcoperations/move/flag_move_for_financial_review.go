// Code generated by go-swagger; DO NOT EDIT.

package move

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FlagMoveForFinancialReviewHandlerFunc turns a function with the right signature into a flag move for financial review handler
type FlagMoveForFinancialReviewHandlerFunc func(FlagMoveForFinancialReviewParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FlagMoveForFinancialReviewHandlerFunc) Handle(params FlagMoveForFinancialReviewParams) middleware.Responder {
	return fn(params)
}

// FlagMoveForFinancialReviewHandler interface for that can handle valid flag move for financial review params
type FlagMoveForFinancialReviewHandler interface {
	Handle(FlagMoveForFinancialReviewParams) middleware.Responder
}

// NewFlagMoveForFinancialReview creates a new http.Handler for the flag move for financial review operation
func NewFlagMoveForFinancialReview(ctx *middleware.Context, handler FlagMoveForFinancialReviewHandler) *FlagMoveForFinancialReview {
	return &FlagMoveForFinancialReview{Context: ctx, Handler: handler}
}

/* FlagMoveForFinancialReview swagger:route POST /moves/{moveID}/financial-review-flag move flagMoveForFinancialReview

Flags a move for financial office review

This sets a flag which indicates that the move should be reviewed by a fincancial office. For example, if the origin or destination address of a shipment is far from the duty location and may incur excess costs to the customer.

*/
type FlagMoveForFinancialReview struct {
	Context *middleware.Context
	Handler FlagMoveForFinancialReviewHandler
}

func (o *FlagMoveForFinancialReview) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewFlagMoveForFinancialReviewParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// FlagMoveForFinancialReviewBody flag move for financial review body
//
// swagger:model FlagMoveForFinancialReviewBody
type FlagMoveForFinancialReviewBody struct {

	// explanation of why the move is being flagged for financial review
	// Example: this address is way too far away
	Remarks string `json:"remarks,omitempty"`
}

// Validate validates this flag move for financial review body
func (o *FlagMoveForFinancialReviewBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flag move for financial review body based on context it is used
func (o *FlagMoveForFinancialReviewBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *FlagMoveForFinancialReviewBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *FlagMoveForFinancialReviewBody) UnmarshalBinary(b []byte) error {
	var res FlagMoveForFinancialReviewBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
