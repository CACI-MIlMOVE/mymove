// Code generated by go-swagger; DO NOT EDIT.

package shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/transcom/mymove/pkg/gen/ghcmessages"
)

// ApproveSitExtensionOKCode is the HTTP code returned for type ApproveSitExtensionOK
const ApproveSitExtensionOKCode int = 200

/*ApproveSitExtensionOK Successfully approved a SIT extension

swagger:response approveSitExtensionOK
*/
type ApproveSitExtensionOK struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.MTOShipment `json:"body,omitempty"`
}

// NewApproveSitExtensionOK creates ApproveSitExtensionOK with default headers values
func NewApproveSitExtensionOK() *ApproveSitExtensionOK {

	return &ApproveSitExtensionOK{}
}

// WithPayload adds the payload to the approve sit extension o k response
func (o *ApproveSitExtensionOK) WithPayload(payload *ghcmessages.MTOShipment) *ApproveSitExtensionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension o k response
func (o *ApproveSitExtensionOK) SetPayload(payload *ghcmessages.MTOShipment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSitExtensionForbiddenCode is the HTTP code returned for type ApproveSitExtensionForbidden
const ApproveSitExtensionForbiddenCode int = 403

/*ApproveSitExtensionForbidden The request was denied

swagger:response approveSitExtensionForbidden
*/
type ApproveSitExtensionForbidden struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSitExtensionForbidden creates ApproveSitExtensionForbidden with default headers values
func NewApproveSitExtensionForbidden() *ApproveSitExtensionForbidden {

	return &ApproveSitExtensionForbidden{}
}

// WithPayload adds the payload to the approve sit extension forbidden response
func (o *ApproveSitExtensionForbidden) WithPayload(payload *ghcmessages.Error) *ApproveSitExtensionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension forbidden response
func (o *ApproveSitExtensionForbidden) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSitExtensionNotFoundCode is the HTTP code returned for type ApproveSitExtensionNotFound
const ApproveSitExtensionNotFoundCode int = 404

/*ApproveSitExtensionNotFound The requested resource wasn't found

swagger:response approveSitExtensionNotFound
*/
type ApproveSitExtensionNotFound struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSitExtensionNotFound creates ApproveSitExtensionNotFound with default headers values
func NewApproveSitExtensionNotFound() *ApproveSitExtensionNotFound {

	return &ApproveSitExtensionNotFound{}
}

// WithPayload adds the payload to the approve sit extension not found response
func (o *ApproveSitExtensionNotFound) WithPayload(payload *ghcmessages.Error) *ApproveSitExtensionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension not found response
func (o *ApproveSitExtensionNotFound) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSitExtensionConflictCode is the HTTP code returned for type ApproveSitExtensionConflict
const ApproveSitExtensionConflictCode int = 409

/*ApproveSitExtensionConflict Conflict error

swagger:response approveSitExtensionConflict
*/
type ApproveSitExtensionConflict struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSitExtensionConflict creates ApproveSitExtensionConflict with default headers values
func NewApproveSitExtensionConflict() *ApproveSitExtensionConflict {

	return &ApproveSitExtensionConflict{}
}

// WithPayload adds the payload to the approve sit extension conflict response
func (o *ApproveSitExtensionConflict) WithPayload(payload *ghcmessages.Error) *ApproveSitExtensionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension conflict response
func (o *ApproveSitExtensionConflict) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSitExtensionPreconditionFailedCode is the HTTP code returned for type ApproveSitExtensionPreconditionFailed
const ApproveSitExtensionPreconditionFailedCode int = 412

/*ApproveSitExtensionPreconditionFailed Precondition failed

swagger:response approveSitExtensionPreconditionFailed
*/
type ApproveSitExtensionPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSitExtensionPreconditionFailed creates ApproveSitExtensionPreconditionFailed with default headers values
func NewApproveSitExtensionPreconditionFailed() *ApproveSitExtensionPreconditionFailed {

	return &ApproveSitExtensionPreconditionFailed{}
}

// WithPayload adds the payload to the approve sit extension precondition failed response
func (o *ApproveSitExtensionPreconditionFailed) WithPayload(payload *ghcmessages.Error) *ApproveSitExtensionPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension precondition failed response
func (o *ApproveSitExtensionPreconditionFailed) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSitExtensionUnprocessableEntityCode is the HTTP code returned for type ApproveSitExtensionUnprocessableEntity
const ApproveSitExtensionUnprocessableEntityCode int = 422

/*ApproveSitExtensionUnprocessableEntity The payload was unprocessable.

swagger:response approveSitExtensionUnprocessableEntity
*/
type ApproveSitExtensionUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.ValidationError `json:"body,omitempty"`
}

// NewApproveSitExtensionUnprocessableEntity creates ApproveSitExtensionUnprocessableEntity with default headers values
func NewApproveSitExtensionUnprocessableEntity() *ApproveSitExtensionUnprocessableEntity {

	return &ApproveSitExtensionUnprocessableEntity{}
}

// WithPayload adds the payload to the approve sit extension unprocessable entity response
func (o *ApproveSitExtensionUnprocessableEntity) WithPayload(payload *ghcmessages.ValidationError) *ApproveSitExtensionUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension unprocessable entity response
func (o *ApproveSitExtensionUnprocessableEntity) SetPayload(payload *ghcmessages.ValidationError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ApproveSitExtensionInternalServerErrorCode is the HTTP code returned for type ApproveSitExtensionInternalServerError
const ApproveSitExtensionInternalServerErrorCode int = 500

/*ApproveSitExtensionInternalServerError A server error occurred

swagger:response approveSitExtensionInternalServerError
*/
type ApproveSitExtensionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *ghcmessages.Error `json:"body,omitempty"`
}

// NewApproveSitExtensionInternalServerError creates ApproveSitExtensionInternalServerError with default headers values
func NewApproveSitExtensionInternalServerError() *ApproveSitExtensionInternalServerError {

	return &ApproveSitExtensionInternalServerError{}
}

// WithPayload adds the payload to the approve sit extension internal server error response
func (o *ApproveSitExtensionInternalServerError) WithPayload(payload *ghcmessages.Error) *ApproveSitExtensionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the approve sit extension internal server error response
func (o *ApproveSitExtensionInternalServerError) SetPayload(payload *ghcmessages.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ApproveSitExtensionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
