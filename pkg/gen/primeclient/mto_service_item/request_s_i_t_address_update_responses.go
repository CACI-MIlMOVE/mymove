// Code generated by go-swagger; DO NOT EDIT.

package mto_service_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/transcom/mymove/pkg/gen/primemessages"
)

// RequestSITAddressUpdateReader is a Reader for the RequestSITAddressUpdate structure.
type RequestSITAddressUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestSITAddressUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestSITAddressUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestSITAddressUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRequestSITAddressUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRequestSITAddressUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRequestSITAddressUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRequestSITAddressUpdateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRequestSITAddressUpdateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRequestSITAddressUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRequestSITAddressUpdateOK creates a RequestSITAddressUpdateOK with default headers values
func NewRequestSITAddressUpdateOK() *RequestSITAddressUpdateOK {
	return &RequestSITAddressUpdateOK{}
}

/*
RequestSITAddressUpdateOK describes a response with status code 200, with default header values.

Succesfully created a SIT address update request.
*/
type RequestSITAddressUpdateOK struct {
	Payload *primemessages.SitAddressUpdate
}

// IsSuccess returns true when this request s i t address update o k response has a 2xx status code
func (o *RequestSITAddressUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request s i t address update o k response has a 3xx status code
func (o *RequestSITAddressUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update o k response has a 4xx status code
func (o *RequestSITAddressUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this request s i t address update o k response has a 5xx status code
func (o *RequestSITAddressUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update o k response a status code equal to that given
func (o *RequestSITAddressUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the request s i t address update o k response
func (o *RequestSITAddressUpdateOK) Code() int {
	return 200
}

func (o *RequestSITAddressUpdateOK) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateOK  %+v", 200, o.Payload)
}

func (o *RequestSITAddressUpdateOK) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateOK  %+v", 200, o.Payload)
}

func (o *RequestSITAddressUpdateOK) GetPayload() *primemessages.SitAddressUpdate {
	return o.Payload
}

func (o *RequestSITAddressUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.SitAddressUpdate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateBadRequest creates a RequestSITAddressUpdateBadRequest with default headers values
func NewRequestSITAddressUpdateBadRequest() *RequestSITAddressUpdateBadRequest {
	return &RequestSITAddressUpdateBadRequest{}
}

/*
RequestSITAddressUpdateBadRequest describes a response with status code 400, with default header values.

The request payload is invalid.
*/
type RequestSITAddressUpdateBadRequest struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this request s i t address update bad request response has a 2xx status code
func (o *RequestSITAddressUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update bad request response has a 3xx status code
func (o *RequestSITAddressUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update bad request response has a 4xx status code
func (o *RequestSITAddressUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this request s i t address update bad request response has a 5xx status code
func (o *RequestSITAddressUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update bad request response a status code equal to that given
func (o *RequestSITAddressUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the request s i t address update bad request response
func (o *RequestSITAddressUpdateBadRequest) Code() int {
	return 400
}

func (o *RequestSITAddressUpdateBadRequest) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *RequestSITAddressUpdateBadRequest) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *RequestSITAddressUpdateBadRequest) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *RequestSITAddressUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateUnauthorized creates a RequestSITAddressUpdateUnauthorized with default headers values
func NewRequestSITAddressUpdateUnauthorized() *RequestSITAddressUpdateUnauthorized {
	return &RequestSITAddressUpdateUnauthorized{}
}

/*
RequestSITAddressUpdateUnauthorized describes a response with status code 401, with default header values.

The request was denied.
*/
type RequestSITAddressUpdateUnauthorized struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this request s i t address update unauthorized response has a 2xx status code
func (o *RequestSITAddressUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update unauthorized response has a 3xx status code
func (o *RequestSITAddressUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update unauthorized response has a 4xx status code
func (o *RequestSITAddressUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this request s i t address update unauthorized response has a 5xx status code
func (o *RequestSITAddressUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update unauthorized response a status code equal to that given
func (o *RequestSITAddressUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the request s i t address update unauthorized response
func (o *RequestSITAddressUpdateUnauthorized) Code() int {
	return 401
}

func (o *RequestSITAddressUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *RequestSITAddressUpdateUnauthorized) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *RequestSITAddressUpdateUnauthorized) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *RequestSITAddressUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateForbidden creates a RequestSITAddressUpdateForbidden with default headers values
func NewRequestSITAddressUpdateForbidden() *RequestSITAddressUpdateForbidden {
	return &RequestSITAddressUpdateForbidden{}
}

/*
RequestSITAddressUpdateForbidden describes a response with status code 403, with default header values.

The request was denied.
*/
type RequestSITAddressUpdateForbidden struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this request s i t address update forbidden response has a 2xx status code
func (o *RequestSITAddressUpdateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update forbidden response has a 3xx status code
func (o *RequestSITAddressUpdateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update forbidden response has a 4xx status code
func (o *RequestSITAddressUpdateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this request s i t address update forbidden response has a 5xx status code
func (o *RequestSITAddressUpdateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update forbidden response a status code equal to that given
func (o *RequestSITAddressUpdateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the request s i t address update forbidden response
func (o *RequestSITAddressUpdateForbidden) Code() int {
	return 403
}

func (o *RequestSITAddressUpdateForbidden) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateForbidden  %+v", 403, o.Payload)
}

func (o *RequestSITAddressUpdateForbidden) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateForbidden  %+v", 403, o.Payload)
}

func (o *RequestSITAddressUpdateForbidden) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *RequestSITAddressUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateNotFound creates a RequestSITAddressUpdateNotFound with default headers values
func NewRequestSITAddressUpdateNotFound() *RequestSITAddressUpdateNotFound {
	return &RequestSITAddressUpdateNotFound{}
}

/*
RequestSITAddressUpdateNotFound describes a response with status code 404, with default header values.

The requested resource wasn't found.
*/
type RequestSITAddressUpdateNotFound struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this request s i t address update not found response has a 2xx status code
func (o *RequestSITAddressUpdateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update not found response has a 3xx status code
func (o *RequestSITAddressUpdateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update not found response has a 4xx status code
func (o *RequestSITAddressUpdateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this request s i t address update not found response has a 5xx status code
func (o *RequestSITAddressUpdateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update not found response a status code equal to that given
func (o *RequestSITAddressUpdateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the request s i t address update not found response
func (o *RequestSITAddressUpdateNotFound) Code() int {
	return 404
}

func (o *RequestSITAddressUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateNotFound  %+v", 404, o.Payload)
}

func (o *RequestSITAddressUpdateNotFound) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateNotFound  %+v", 404, o.Payload)
}

func (o *RequestSITAddressUpdateNotFound) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *RequestSITAddressUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateConflict creates a RequestSITAddressUpdateConflict with default headers values
func NewRequestSITAddressUpdateConflict() *RequestSITAddressUpdateConflict {
	return &RequestSITAddressUpdateConflict{}
}

/*
RequestSITAddressUpdateConflict describes a response with status code 409, with default header values.

The request could not be processed because of conflict in the current state of the resource.
*/
type RequestSITAddressUpdateConflict struct {
	Payload *primemessages.ClientError
}

// IsSuccess returns true when this request s i t address update conflict response has a 2xx status code
func (o *RequestSITAddressUpdateConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update conflict response has a 3xx status code
func (o *RequestSITAddressUpdateConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update conflict response has a 4xx status code
func (o *RequestSITAddressUpdateConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this request s i t address update conflict response has a 5xx status code
func (o *RequestSITAddressUpdateConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update conflict response a status code equal to that given
func (o *RequestSITAddressUpdateConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the request s i t address update conflict response
func (o *RequestSITAddressUpdateConflict) Code() int {
	return 409
}

func (o *RequestSITAddressUpdateConflict) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateConflict  %+v", 409, o.Payload)
}

func (o *RequestSITAddressUpdateConflict) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateConflict  %+v", 409, o.Payload)
}

func (o *RequestSITAddressUpdateConflict) GetPayload() *primemessages.ClientError {
	return o.Payload
}

func (o *RequestSITAddressUpdateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateUnprocessableEntity creates a RequestSITAddressUpdateUnprocessableEntity with default headers values
func NewRequestSITAddressUpdateUnprocessableEntity() *RequestSITAddressUpdateUnprocessableEntity {
	return &RequestSITAddressUpdateUnprocessableEntity{}
}

/*
RequestSITAddressUpdateUnprocessableEntity describes a response with status code 422, with default header values.

The request was unprocessable, likely due to bad input from the requester.
*/
type RequestSITAddressUpdateUnprocessableEntity struct {
	Payload *primemessages.ValidationError
}

// IsSuccess returns true when this request s i t address update unprocessable entity response has a 2xx status code
func (o *RequestSITAddressUpdateUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update unprocessable entity response has a 3xx status code
func (o *RequestSITAddressUpdateUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update unprocessable entity response has a 4xx status code
func (o *RequestSITAddressUpdateUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this request s i t address update unprocessable entity response has a 5xx status code
func (o *RequestSITAddressUpdateUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this request s i t address update unprocessable entity response a status code equal to that given
func (o *RequestSITAddressUpdateUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the request s i t address update unprocessable entity response
func (o *RequestSITAddressUpdateUnprocessableEntity) Code() int {
	return 422
}

func (o *RequestSITAddressUpdateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RequestSITAddressUpdateUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RequestSITAddressUpdateUnprocessableEntity) GetPayload() *primemessages.ValidationError {
	return o.Payload
}

func (o *RequestSITAddressUpdateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestSITAddressUpdateInternalServerError creates a RequestSITAddressUpdateInternalServerError with default headers values
func NewRequestSITAddressUpdateInternalServerError() *RequestSITAddressUpdateInternalServerError {
	return &RequestSITAddressUpdateInternalServerError{}
}

/*
RequestSITAddressUpdateInternalServerError describes a response with status code 500, with default header values.

A server error occurred.
*/
type RequestSITAddressUpdateInternalServerError struct {
	Payload *primemessages.Error
}

// IsSuccess returns true when this request s i t address update internal server error response has a 2xx status code
func (o *RequestSITAddressUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request s i t address update internal server error response has a 3xx status code
func (o *RequestSITAddressUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request s i t address update internal server error response has a 4xx status code
func (o *RequestSITAddressUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this request s i t address update internal server error response has a 5xx status code
func (o *RequestSITAddressUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this request s i t address update internal server error response a status code equal to that given
func (o *RequestSITAddressUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the request s i t address update internal server error response
func (o *RequestSITAddressUpdateInternalServerError) Code() int {
	return 500
}

func (o *RequestSITAddressUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *RequestSITAddressUpdateInternalServerError) String() string {
	return fmt.Sprintf("[POST /sit-address-updates][%d] requestSITAddressUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *RequestSITAddressUpdateInternalServerError) GetPayload() *primemessages.Error {
	return o.Payload
}

func (o *RequestSITAddressUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(primemessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
