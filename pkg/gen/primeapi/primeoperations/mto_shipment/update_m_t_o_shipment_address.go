// Code generated by go-swagger; DO NOT EDIT.

package mto_shipment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateMTOShipmentAddressHandlerFunc turns a function with the right signature into a update m t o shipment address handler
type UpdateMTOShipmentAddressHandlerFunc func(UpdateMTOShipmentAddressParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateMTOShipmentAddressHandlerFunc) Handle(params UpdateMTOShipmentAddressParams) middleware.Responder {
	return fn(params)
}

// UpdateMTOShipmentAddressHandler interface for that can handle valid update m t o shipment address params
type UpdateMTOShipmentAddressHandler interface {
	Handle(UpdateMTOShipmentAddressParams) middleware.Responder
}

// NewUpdateMTOShipmentAddress creates a new http.Handler for the update m t o shipment address operation
func NewUpdateMTOShipmentAddress(ctx *middleware.Context, handler UpdateMTOShipmentAddressHandler) *UpdateMTOShipmentAddress {
	return &UpdateMTOShipmentAddress{Context: ctx, Handler: handler}
}

/*UpdateMTOShipmentAddress swagger:route PUT /mto-shipments/{mtoShipmentID}/addresses/{addressID} mtoShipment updateMTOShipmentAddress

updateMTOShipmentAddress

TK

*/
type UpdateMTOShipmentAddress struct {
	Context *middleware.Context
	Handler UpdateMTOShipmentAddressHandler
}

func (o *UpdateMTOShipmentAddress) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateMTOShipmentAddressParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
