// Code generated by go-swagger; DO NOT EDIT.

package payment_requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	supportmessages "github.com/transcom/mymove/pkg/gen/supportmessages"
)

// GetMTOPaymentRequestsReader is a Reader for the GetMTOPaymentRequests structure.
type GetMTOPaymentRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMTOPaymentRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMTOPaymentRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMTOPaymentRequestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMTOPaymentRequestsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMTOPaymentRequestsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMTOPaymentRequestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMTOPaymentRequestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMTOPaymentRequestsOK creates a GetMTOPaymentRequestsOK with default headers values
func NewGetMTOPaymentRequestsOK() *GetMTOPaymentRequestsOK {
	return &GetMTOPaymentRequestsOK{}
}

/*GetMTOPaymentRequestsOK handles this case with default header values.

Successfully retrieved payment requests associated with a given move task order
*/
type GetMTOPaymentRequestsOK struct {
	Payload supportmessages.PaymentRequests
}

func (o *GetMTOPaymentRequestsOK) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] getMTOPaymentRequestsOK  %+v", 200, o.Payload)
}

func (o *GetMTOPaymentRequestsOK) GetPayload() supportmessages.PaymentRequests {
	return o.Payload
}

func (o *GetMTOPaymentRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMTOPaymentRequestsBadRequest creates a GetMTOPaymentRequestsBadRequest with default headers values
func NewGetMTOPaymentRequestsBadRequest() *GetMTOPaymentRequestsBadRequest {
	return &GetMTOPaymentRequestsBadRequest{}
}

/*GetMTOPaymentRequestsBadRequest handles this case with default header values.

The request payload is invalid.
*/
type GetMTOPaymentRequestsBadRequest struct {
	Payload *supportmessages.ClientError
}

func (o *GetMTOPaymentRequestsBadRequest) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] getMTOPaymentRequestsBadRequest  %+v", 400, o.Payload)
}

func (o *GetMTOPaymentRequestsBadRequest) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *GetMTOPaymentRequestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMTOPaymentRequestsUnauthorized creates a GetMTOPaymentRequestsUnauthorized with default headers values
func NewGetMTOPaymentRequestsUnauthorized() *GetMTOPaymentRequestsUnauthorized {
	return &GetMTOPaymentRequestsUnauthorized{}
}

/*GetMTOPaymentRequestsUnauthorized handles this case with default header values.

The request was denied.
*/
type GetMTOPaymentRequestsUnauthorized struct {
	Payload *supportmessages.ClientError
}

func (o *GetMTOPaymentRequestsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] getMTOPaymentRequestsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMTOPaymentRequestsUnauthorized) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *GetMTOPaymentRequestsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMTOPaymentRequestsForbidden creates a GetMTOPaymentRequestsForbidden with default headers values
func NewGetMTOPaymentRequestsForbidden() *GetMTOPaymentRequestsForbidden {
	return &GetMTOPaymentRequestsForbidden{}
}

/*GetMTOPaymentRequestsForbidden handles this case with default header values.

The request was denied.
*/
type GetMTOPaymentRequestsForbidden struct {
	Payload *supportmessages.ClientError
}

func (o *GetMTOPaymentRequestsForbidden) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] getMTOPaymentRequestsForbidden  %+v", 403, o.Payload)
}

func (o *GetMTOPaymentRequestsForbidden) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *GetMTOPaymentRequestsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMTOPaymentRequestsNotFound creates a GetMTOPaymentRequestsNotFound with default headers values
func NewGetMTOPaymentRequestsNotFound() *GetMTOPaymentRequestsNotFound {
	return &GetMTOPaymentRequestsNotFound{}
}

/*GetMTOPaymentRequestsNotFound handles this case with default header values.

The requested resource wasn't found.
*/
type GetMTOPaymentRequestsNotFound struct {
	Payload *supportmessages.ClientError
}

func (o *GetMTOPaymentRequestsNotFound) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] getMTOPaymentRequestsNotFound  %+v", 404, o.Payload)
}

func (o *GetMTOPaymentRequestsNotFound) GetPayload() *supportmessages.ClientError {
	return o.Payload
}

func (o *GetMTOPaymentRequestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.ClientError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMTOPaymentRequestsInternalServerError creates a GetMTOPaymentRequestsInternalServerError with default headers values
func NewGetMTOPaymentRequestsInternalServerError() *GetMTOPaymentRequestsInternalServerError {
	return &GetMTOPaymentRequestsInternalServerError{}
}

/*GetMTOPaymentRequestsInternalServerError handles this case with default header values.

A server error occurred.
*/
type GetMTOPaymentRequestsInternalServerError struct {
	Payload *supportmessages.Error
}

func (o *GetMTOPaymentRequestsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /move-task-orders/{moveTaskOrderID}/payment-requests][%d] getMTOPaymentRequestsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMTOPaymentRequestsInternalServerError) GetPayload() *supportmessages.Error {
	return o.Payload
}

func (o *GetMTOPaymentRequestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(supportmessages.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
