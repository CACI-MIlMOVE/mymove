// Code generated by go-swagger; DO NOT EDIT.

package primemessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MTOServiceItemDomOriginDaySIT MTO Service Item - Dom. Origin 1st Day SIT (DOFSIT)
// swagger:model MTOServiceItemDomOriginDaySIT
type MTOServiceItemDomOriginDaySIT struct {
	MTOServiceItem

	MTOServiceItemDomOriginDaySITAllOf1

	// pickup postal code
	// Required: true
	// Pattern: ^(\d{5}([\-]\d{4})?)$
	PickupPostalCode *string `json:"pickupPostalCode"`

	// reason
	// Required: true
	Reason *string `json:"reason"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *MTOServiceItemDomOriginDaySIT) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 MTOServiceItem
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.MTOServiceItem = aO0

	// AO1
	var aO1 MTOServiceItemDomOriginDaySITAllOf1
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.MTOServiceItemDomOriginDaySITAllOf1 = aO1

	// now for regular properties
	var propsMTOServiceItemDomOriginDaySIT struct {
		PickupPostalCode *string `json:"pickupPostalCode"`

		Reason *string `json:"reason"`
	}
	if err := swag.ReadJSON(raw, &propsMTOServiceItemDomOriginDaySIT); err != nil {
		return err
	}
	m.PickupPostalCode = propsMTOServiceItemDomOriginDaySIT.PickupPostalCode

	m.Reason = propsMTOServiceItemDomOriginDaySIT.Reason

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m MTOServiceItemDomOriginDaySIT) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.MTOServiceItem)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.MTOServiceItemDomOriginDaySITAllOf1)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	// now for regular properties
	var propsMTOServiceItemDomOriginDaySIT struct {
		PickupPostalCode *string `json:"pickupPostalCode"`

		Reason *string `json:"reason"`
	}
	propsMTOServiceItemDomOriginDaySIT.PickupPostalCode = m.PickupPostalCode

	propsMTOServiceItemDomOriginDaySIT.Reason = m.Reason

	jsonDataPropsMTOServiceItemDomOriginDaySIT, errMTOServiceItemDomOriginDaySIT := swag.WriteJSON(propsMTOServiceItemDomOriginDaySIT)
	if errMTOServiceItemDomOriginDaySIT != nil {
		return nil, errMTOServiceItemDomOriginDaySIT
	}
	_parts = append(_parts, jsonDataPropsMTOServiceItemDomOriginDaySIT)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this m t o service item dom origin day s i t
func (m *MTOServiceItemDomOriginDaySIT) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with MTOServiceItem
	if err := m.MTOServiceItem.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with MTOServiceItemDomOriginDaySITAllOf1

	if err := m.validatePickupPostalCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReason(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MTOServiceItemDomOriginDaySIT) validatePickupPostalCode(formats strfmt.Registry) error {

	if err := validate.Required("pickupPostalCode", "body", m.PickupPostalCode); err != nil {
		return err
	}

	if err := validate.Pattern("pickupPostalCode", "body", string(*m.PickupPostalCode), `^(\d{5}([\-]\d{4})?)$`); err != nil {
		return err
	}

	return nil
}

func (m *MTOServiceItemDomOriginDaySIT) validateReason(formats strfmt.Registry) error {

	if err := validate.Required("reason", "body", m.Reason); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MTOServiceItemDomOriginDaySIT) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MTOServiceItemDomOriginDaySIT) UnmarshalBinary(b []byte) error {
	var res MTOServiceItemDomOriginDaySIT
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// MTOServiceItemDomOriginDaySITAllOf1 m t o service item dom origin day s i t all of1
// swagger:model MTOServiceItemDomOriginDaySITAllOf1
type MTOServiceItemDomOriginDaySITAllOf1 interface{}
