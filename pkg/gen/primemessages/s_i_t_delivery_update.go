// Code generated by go-swagger; DO NOT EDIT.

package primemessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SITDeliveryUpdate s i t delivery update
//
// swagger:model SITDeliveryUpdate
type SITDeliveryUpdate struct {

	// sit customer contacted
	// Format: date
	SitCustomerContacted *strfmt.Date `json:"sitCustomerContacted,omitempty"`

	// sit requested delivery
	// Format: date
	SitRequestedDelivery *strfmt.Date `json:"sitRequestedDelivery,omitempty"`
}

// Validate validates this s i t delivery update
func (m *SITDeliveryUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSitCustomerContacted(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSitRequestedDelivery(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SITDeliveryUpdate) validateSitCustomerContacted(formats strfmt.Registry) error {
	if swag.IsZero(m.SitCustomerContacted) { // not required
		return nil
	}

	if err := validate.FormatOf("sitCustomerContacted", "body", "date", m.SitCustomerContacted.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SITDeliveryUpdate) validateSitRequestedDelivery(formats strfmt.Registry) error {
	if swag.IsZero(m.SitRequestedDelivery) { // not required
		return nil
	}

	if err := validate.FormatOf("sitRequestedDelivery", "body", "date", m.SitRequestedDelivery.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this s i t delivery update based on context it is used
func (m *SITDeliveryUpdate) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SITDeliveryUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SITDeliveryUpdate) UnmarshalBinary(b []byte) error {
	var res SITDeliveryUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
