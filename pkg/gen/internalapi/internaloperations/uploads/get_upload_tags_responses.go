// Code generated by go-swagger; DO NOT EDIT.

package uploads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	internalmessages "github.com/transcom/mymove/pkg/gen/internalmessages"
)

// GetUploadTagsOKCode is the HTTP code returned for type GetUploadTagsOK
const GetUploadTagsOKCode int = 200

/*GetUploadTagsOK the requested tags

swagger:response getUploadTagsOK
*/
type GetUploadTagsOK struct {

	/*
	  In: Body
	*/
	Payload internalmessages.Tags `json:"body,omitempty"`
}

// NewGetUploadTagsOK creates GetUploadTagsOK with default headers values
func NewGetUploadTagsOK() *GetUploadTagsOK {

	return &GetUploadTagsOK{}
}

// WithPayload adds the payload to the get upload tags o k response
func (o *GetUploadTagsOK) WithPayload(payload internalmessages.Tags) *GetUploadTagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload tags o k response
func (o *GetUploadTagsOK) SetPayload(payload internalmessages.Tags) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadTagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = internalmessages.Tags{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetUploadTagsBadRequestCode is the HTTP code returned for type GetUploadTagsBadRequest
const GetUploadTagsBadRequestCode int = 400

/*GetUploadTagsBadRequest invalid request

swagger:response getUploadTagsBadRequest
*/
type GetUploadTagsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *internalmessages.InvalidRequestResponsePayload `json:"body,omitempty"`
}

// NewGetUploadTagsBadRequest creates GetUploadTagsBadRequest with default headers values
func NewGetUploadTagsBadRequest() *GetUploadTagsBadRequest {

	return &GetUploadTagsBadRequest{}
}

// WithPayload adds the payload to the get upload tags bad request response
func (o *GetUploadTagsBadRequest) WithPayload(payload *internalmessages.InvalidRequestResponsePayload) *GetUploadTagsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get upload tags bad request response
func (o *GetUploadTagsBadRequest) SetPayload(payload *internalmessages.InvalidRequestResponsePayload) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUploadTagsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUploadTagsForbiddenCode is the HTTP code returned for type GetUploadTagsForbidden
const GetUploadTagsForbiddenCode int = 403

/*GetUploadTagsForbidden not authorized

swagger:response getUploadTagsForbidden
*/
type GetUploadTagsForbidden struct {
}

// NewGetUploadTagsForbidden creates GetUploadTagsForbidden with default headers values
func NewGetUploadTagsForbidden() *GetUploadTagsForbidden {

	return &GetUploadTagsForbidden{}
}

// WriteResponse to the client
func (o *GetUploadTagsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(403)
}

// GetUploadTagsNotFoundCode is the HTTP code returned for type GetUploadTagsNotFound
const GetUploadTagsNotFoundCode int = 404

/*GetUploadTagsNotFound not found

swagger:response getUploadTagsNotFound
*/
type GetUploadTagsNotFound struct {
}

// NewGetUploadTagsNotFound creates GetUploadTagsNotFound with default headers values
func NewGetUploadTagsNotFound() *GetUploadTagsNotFound {

	return &GetUploadTagsNotFound{}
}

// WriteResponse to the client
func (o *GetUploadTagsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetUploadTagsInternalServerErrorCode is the HTTP code returned for type GetUploadTagsInternalServerError
const GetUploadTagsInternalServerErrorCode int = 500

/*GetUploadTagsInternalServerError server error

swagger:response getUploadTagsInternalServerError
*/
type GetUploadTagsInternalServerError struct {
}

// NewGetUploadTagsInternalServerError creates GetUploadTagsInternalServerError with default headers values
func NewGetUploadTagsInternalServerError() *GetUploadTagsInternalServerError {

	return &GetUploadTagsInternalServerError{}
}

// WriteResponse to the client
func (o *GetUploadTagsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
