// Code generated by go-swagger; DO NOT EDIT.

package adminmessages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TransportationServiceProviderPerformance transportation service provider performance
// swagger:model TransportationServiceProviderPerformance
type TransportationServiceProviderPerformance struct {

	// best value score
	BestValueScore float64 `json:"BestValueScore,omitempty"`

	// linehaul rate
	LinehaulRate float64 `json:"LinehaulRate,omitempty"`

	// offer count
	OfferCount int64 `json:"OfferCount,omitempty"`

	// performance period end
	// Format: date-time
	PerformancePeriodEnd strfmt.DateTime `json:"PerformancePeriodEnd,omitempty"`

	// performance period start
	// Format: date-time
	PerformancePeriodStart strfmt.DateTime `json:"PerformancePeriodStart,omitempty"`

	// quality band
	QualityBand *int64 `json:"QualityBand,omitempty"`

	// rate cycle end
	// Format: date-time
	RateCycleEnd strfmt.DateTime `json:"RateCycleEnd,omitempty"`

	// rate cycle start
	// Format: date-time
	RateCycleStart strfmt.DateTime `json:"RateCycleStart,omitempty"`

	// s i t rate
	SITRate float64 `json:"SITRate,omitempty"`

	// traffic distribution list ID
	// Format: uuid
	TrafficDistributionListID strfmt.UUID `json:"TrafficDistributionListID,omitempty"`

	// transportation service provider ID
	// Format: uuid
	TransportationServiceProviderID strfmt.UUID `json:"TransportationServiceProviderID,omitempty"`

	// created at
	// Required: true
	// Format: date-time
	CreatedAt *strfmt.DateTime `json:"created_at"`

	// id
	// Required: true
	// Format: uuid
	ID *strfmt.UUID `json:"id"`

	// updated at
	// Required: true
	// Format: date-time
	UpdatedAt *strfmt.DateTime `json:"updated_at"`
}

// Validate validates this transportation service provider performance
func (m *TransportationServiceProviderPerformance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePerformancePeriodEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePerformancePeriodStart(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRateCycleEnd(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRateCycleStart(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTrafficDistributionListID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTransportationServiceProviderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TransportationServiceProviderPerformance) validatePerformancePeriodEnd(formats strfmt.Registry) error {

	if swag.IsZero(m.PerformancePeriodEnd) { // not required
		return nil
	}

	if err := validate.FormatOf("PerformancePeriodEnd", "body", "date-time", m.PerformancePeriodEnd.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validatePerformancePeriodStart(formats strfmt.Registry) error {

	if swag.IsZero(m.PerformancePeriodStart) { // not required
		return nil
	}

	if err := validate.FormatOf("PerformancePeriodStart", "body", "date-time", m.PerformancePeriodStart.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateRateCycleEnd(formats strfmt.Registry) error {

	if swag.IsZero(m.RateCycleEnd) { // not required
		return nil
	}

	if err := validate.FormatOf("RateCycleEnd", "body", "date-time", m.RateCycleEnd.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateRateCycleStart(formats strfmt.Registry) error {

	if swag.IsZero(m.RateCycleStart) { // not required
		return nil
	}

	if err := validate.FormatOf("RateCycleStart", "body", "date-time", m.RateCycleStart.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateTrafficDistributionListID(formats strfmt.Registry) error {

	if swag.IsZero(m.TrafficDistributionListID) { // not required
		return nil
	}

	if err := validate.FormatOf("TrafficDistributionListID", "body", "uuid", m.TrafficDistributionListID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateTransportationServiceProviderID(formats strfmt.Registry) error {

	if swag.IsZero(m.TransportationServiceProviderID) { // not required
		return nil
	}

	if err := validate.FormatOf("TransportationServiceProviderID", "body", "uuid", m.TransportationServiceProviderID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.FormatOf("id", "body", "uuid", m.ID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransportationServiceProviderPerformance) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", m.UpdatedAt); err != nil {
		return err
	}

	if err := validate.FormatOf("updated_at", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TransportationServiceProviderPerformance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransportationServiceProviderPerformance) UnmarshalBinary(b []byte) error {
	var res TransportationServiceProviderPerformance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
