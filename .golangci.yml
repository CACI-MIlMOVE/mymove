linters-settings:
  govet:
    check-shadowing: true
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/transcom/mymove

linters:
  enable:
    - deadcode
    - gofmt
    - goimports
    - golint
    - gosec
    - govet
    - ineffassign
    - structcheck
    - typecheck
    - varcheck
  disable:
    - errcheck #requires patching code
    - staticcheck # 30+files need to be patched
    - gosimple #deprecated https://github.com/golangci/golangci-lint/issues/357
    - unused #deprecated https://github.com/dominikh/go-tools/tree/master/cmd/unused
  fast: false

issues:
  exclude-rules:
    # skip analyzing dutystationsloader until repeated tags from embedded types are fixed https://github.com/golang/go/issues/30846
    - path: internal/pkg/dutystationsloader/duty_stations_loader.go
      linters:
        - govet

  # Disable defaults for the exclude patterns and instead list them all out
  # TODO: Slowly remove these where they make sense and fix code
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked

    # golint: Annoying issue about not having a comment. The rare codebase has such comments
    - (comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form)

    # golint: False positive when tests are defined in package 'test'
    - func name will be used as test\.Test.* by other packages, and that stutters; consider calling this

    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)

    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop

    # gosec: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)

    # gosec: Duplicated errcheck checks
    - G104

    # gosec: Too many issues in popular repos
    - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
  fix: true

run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  deadline: 8m
  concurrency: 1
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - pkg/assets
    - pkg/gen
    - mocks
  skip-dirs-use-default: true
  modules-download-mode: readonly
