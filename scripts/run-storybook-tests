#! /usr/bin/env bash

#
# Runs the storybook tests in docker containers for CircleCI testing.
#

set -eu -o pipefail

if [[ -z ${CIRCLECI-} ]]; then
  # not on CircleCI
  # check for storybook port to be free, if not offer to kill it
  scripts/kill-process-on-port 6006
  # verify it's free now, if not we need to bail
  pid=$(lsof -t -sTCP:LISTEN -i :"6006") || true

  if [[ -z "$pid" ]]; then
    docker-compose -f docker-compose.storybook.yml -f docker-compose.storybook_local.yml build --pull
    docker-compose -f docker-compose.storybook.yml -f docker-compose.storybook_local.yml up storybook_tests
    container=$(docker-compose -f docker-compose.storybook.yml ps --filter=name=storybook_tests | awk 'END{print $1}')
    return_code=$(docker-compose -f docker-compose.storybook.yml ps --filter=name=storybook_tests | awk 'END{print $6}')

    echo "Clean .loki directory"
    rm -rf .loki

    echo "Copy results to .loki directory"
    docker cp "$container":/home/circleci/project/.loki/ .loki
    ls -lR .loki

    echo "Shutdown containers"
    docker-compose -f docker-compose.storybook.yml down

    exit "$return_code"
  else
    echo "port 6006 is taken cannot continue"
    exit 1
  fi
else
  # on CircleCI
  # remove node_modules from dockerignore
  sed -i='' '/^\/node_modules/d' .dockerignore
  docker-compose -f docker-compose.storybook.yml build --pull
  docker-compose -f docker-compose.storybook.yml up storybook_tests
  container=$(docker-compose -f docker-compose.storybook.yml ps --filter=name=storybook_tests | awk 'END{print $1}')
  return_code=$(docker-compose -f docker-compose.storybook.yml ps --filter=name=storybook_tests | awk 'END{print $6}')

  echo "Clean .loki directory"
  rm -rf .loki

  echo "Copy results to .loki directory"
  docker cp "$container":/home/circleci/project/.loki/ .loki
  ls -lR .loki

  echo "Shutdown containers"
  docker-compose -f docker-compose.storybook.yml down

  exit "$return_code"
fi

