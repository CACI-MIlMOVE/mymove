swagger: '2.0'
info:
  title: MilMove Prime V2 API
  version: 0.0.1
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  contact:
    email: milmove-developers@caci.com
  description:
    $ref: 'info/prime_v2_description.md'
basePath: /prime/v2
schemes:
  - http
tags:
  - $ref: 'tags/moveTaskOrder.yaml'
  - $ref: 'tags/mtoShipment.yaml'
x-tagGroups:
  - name: Endpoints
    tags:
      - moveTaskOrder
      - mtoShipment
paths:
  /move-task-orders/{moveID}:
    get:
      summary: getMoveTaskOrder
      description: |
        ### Functionality
        This endpoint gets an individual MoveTaskOrder by ID.

        It will provide information about the Customer and any associated MTOShipments, MTOServiceItems and PaymentRequests.
      operationId: getMoveTaskOrder
      tags:
        - moveTaskOrder
      produces:
        - application/json
      parameters:
        - description: UUID or MoveCode of move task order to use.
          in: path
          name: moveID
          required: true
          type: string
      responses:
        '200':
          description: Successfully retrieve an individual move task order.
          schema:
            $ref: 'definitions/prime/v2/MoveTaskOrder.yaml'
        '401':
          $ref: 'responses/PermissionDenied.yaml'
        '403':
          $ref: 'responses/PermissionDenied.yaml'
        '404':
          $ref: 'responses/NotFound.yaml'
        '500':
          $ref: '#/responses/ServerError'
  /mto-shipments:
    post:
      summary: createMTOShipment
      description: |
        Creates a new shipment within the specified move. This endpoint should be used whenever the movers identify a
        need for an additional shipment. The new shipment will be submitted to the TOO for review, and the TOO must
        approve it before the contractor can proceed with billing.

        **WIP**: The Prime should be notified by a push notification whenever the TOO approves a shipment connected to
        one of their moves. Otherwise, the Prime can fetch the related move using the
        [getMoveTaskOrder](#operation/getMoveTaskOrder) endpoint and see if this shipment has the status `"APPROVED"`.
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createMTOShipment
      tags:
        - mtoShipment
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateMTOShipment'
          x-examples:
            application/json:
              hhg:
                summary: HHG
                value:
                  {
                    'moveTaskOrderId': '5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8',
                    'shipmentType': 'HHG',
                    'requestedPickupDate': '2022-12-31',
                    'pickupAddress':
                      {
                        'streetAddress1': '204 South Prospect Lane',
                        'city': 'Muldraugh',
                        'state': 'KY',
                        'postalCode': '40155',
                      },
                  }
              nts:
                summary: NTS
                value:
                  {
                    'moveTaskOrderId': '5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8',
                    'shipmentType': 'HHG_INTO_NTS_DOMESTIC',
                    'requestedPickupDate': '2022-12-31',
                    'pickupAddress':
                      {
                        'streetAddress1': '204 South Prospect Lane',
                        'city': 'Muldraugh',
                        'state': 'KY',
                        'postalCode': '40155',
                      },
                    'agents':
                      [
                        {
                          'firstName': 'Edgar',
                          'lastName': 'Taylor',
                          'email': 'edgar.taylor@example.com',
                          'phone': '555-555-5555',
                          'agentType': 'RELEASING_AGENT',
                        },
                      ],
                  }
              nts-r:
                summary: NTS Release
                value:
                  {
                    'moveTaskOrderId': '5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8',
                    'shipmentType': 'HHG_OUTOF_NTS_DOMESTIC',
                    'agents':
                      [
                        {
                          'firstName': 'Edgar',
                          'lastName': 'Taylor',
                          'email': 'edgar.taylor@example.com',
                          'phone': '555-555-5555',
                          'agentType': 'RECEIVING_AGENT',
                        },
                      ],
                  }
              ppm:
                summary: PPM
                value:
                  {
                    'moveTaskOrderId': '5691c951-c35c-49a8-a1d5-a4b7ea7b7ad8',
                    'shipmentType': 'PPM',
                    'ppmShipment':
                      {
                        'pickupPostalCode': '90210',
                        'destinationPostalCode': '10001',
                        'expectedDepartureDate': '2022-10-01',
                        'estimatedWeight': 4999,
                        'hasProGear': false,
                        'sitExpected': false,
                      },
                  }
      responses:
        '200':
          description: Successfully created a MTO shipment.
          schema:
            $ref: '#/definitions/MTOShipment'
        '400':
          $ref: '#/responses/InvalidRequest'
        '404':
          $ref: 'responses/NotFound.yaml'
        '422':
          $ref: 'responses/UnprocessableEntity.yaml'
        '500':
          $ref: '#/responses/ServerError'
definitions:
  MTOServiceItemBasic:  # spectral oas2-unused-definition is OK here due to polymorphism
    $ref: 'definitions/prime/MTOServiceItemBasic.yaml'
  MTOServiceItemDestSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    $ref: 'definitions/prime/MTOServiceItemDestSIT.yaml'
  MTOServiceItemDomesticCrating: # spectral oas2-unused-definition is OK here due to polymorphism
    $ref: 'definitions/prime/MTOServiceItemDomesticCrating.yaml'
  MTOServiceItemOriginSIT: # spectral oas2-unused-definition is OK here due to polymorphism
    $ref: 'definitions/prime/MTOServiceItemOriginSIT.yaml'
  MTOServiceItemShuttle: # spectral oas2-unused-definition is OK here due to polymorphism
    $ref: 'definitions/prime/MTOServiceItemShuttle.yaml'
  CreateMTOShipment:
    type: object
    properties:
      moveTaskOrderID:
        description: The ID of the move this new shipment is for.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      requestedPickupDate:
        description: >
          The customer's preferred pickup date. Other dates, such as required delivery date and (outside MilMove) the
          pack date, are derived from this date.
        format: date
        type: string
        x-nullable: true
      primeEstimatedWeight:
        description: >
          The estimated weight of this shipment, determined by the movers during the pre-move survey.
          This value **can only be updated once.** If there was an issue with estimating the weight and a mistake was made,
          the Prime contractor will need to contact the TOO to change it.
        type: integer
        example: 4500
        minimum: 1
        x-nullable: true
      customerRemarks:
        description: |
          The customer can use the customer remarks field to inform the services counselor and the movers about any
          special circumstances for this shipment. Typical examples:
            * bulky or fragile items,
            * weapons,
            * access info for their address.

          Customer enters this information during onboarding. Optional field.
        type: string
        example: handle with care
        x-nullable: true
      agents:
        $ref: 'definitions/prime/MTOAgents.yaml'
      mtoServiceItems:
        description: A list of service items connected to this shipment.
        type: array
        items:
          $ref: 'definitions/prime/MTOServiceItem.yaml'
      pickupAddress:
        description: The address where the movers should pick up this shipment.
        allOf:
          - $ref: 'definitions/Address.yaml'
      destinationAddress:
        description: Where the movers should deliver this shipment.
        allOf:
          - $ref: 'definitions/Address.yaml'
      shipmentType:
        $ref: 'definitions/prime/MTOShipmentType.yaml'
      diversion:
        description: >
          This value indicates whether or not this shipment is part of a diversion.
          If yes, the shipment can be either the starting or ending segment of the diversion.
          When this boolean is true, you must link it to a parent shipment with the divertedFromShipmentId parameter.
        type: boolean
      divertedFromShipmentId:
        description: >
          The ID of the shipment this is a diversion from. Aka the "Parent" shipment.
          The diversion boolean must be true if this parameter is supplied in the request.
          If provided, and if the diverted from shipment is also a diversion, the previous should must then also have a parent ID.
        example: 1f2270c7-7166-40ae-981e-b200ebdf3054
        format: uuid
        type: string
      pointOfContact:
        type: string
        description: >
          Email or ID of the person who will be contacted in the event of questions or concerns about this update.
          May be the person performing the update, or someone else working with the Prime contractor.
      counselorRemarks:
        type: string
        example: counselor approved
        x-nullable: true
      ppmShipment:
        $ref: '#/definitions/CreatePPMShipment'
    required:
      - moveTaskOrderID
      - shipmentType
  CreatePPMShipment:
    description: Creation object containing the `PPM` shipmentType specific data, not used for other shipment types.
    type: object
    properties:
      expectedDepartureDate:
        description: >
          Date the customer expects to begin moving from their origin.
        format: date
        type: string
      pickupPostalCode:
        description: The postal code of the origin location where goods are being moved from.
        format: zip
        type: string
        example: '90210'
        pattern: ^(\d{5})$
      secondaryPickupPostalCode:
        description: An optional secondary pickup location near the origin where additional goods exist.
        format: zip
        type: string
        title: ZIP
        example: '90210'
        pattern: ^(\d{5})$
        x-nullable: true
      destinationPostalCode:
        description: The postal code of the destination location where goods are being delivered to.
        format: zip
        type: string
        title: ZIP
        example: '90210'
        pattern: ^(\d{5})$
      secondaryDestinationPostalCode:
        description: An optional secondary location near the destination where goods will be dropped off.
        format: zip
        type: string
        title: ZIP
        example: '90210'
        pattern: ^(\d{5})$
        x-nullable: true
      sitExpected:
        description: |
          Captures whether some or all of the PPM shipment will require temporary storage at the origin or destination.

          Must be set to `true` when providing `sitLocation`, `sitEstimatedWeight`, `sitEstimatedEntryDate`, and `sitEstimatedDepartureDate` values to calculate the `sitEstimatedCost`.
        type: boolean
      sitLocation:
        allOf:
          - $ref: 'definitions/SITLocationType.yaml'
          - x-nullable: true
      sitEstimatedWeight:
        description: The estimated weight of the goods being put into storage in pounds.
        type: integer
        example: 2000
        x-nullable: true
      sitEstimatedEntryDate:
        description: The date that goods will first enter the storage location.
        format: date
        type: string
        x-nullable: true
      sitEstimatedDepartureDate:
        description: The date that goods will exit the storage location.
        format: date
        type: string
        x-nullable: true
      estimatedWeight:
        description: The estimated weight of the PPM shipment goods being moved in pounds.
        type: integer
        example: 4200
      hasProGear:
        description: >
          Indicates whether PPM shipment has pro gear for themselves or their spouse.
        type: boolean
      proGearWeight:
        description: The estimated weight of the pro-gear being moved belonging to the service member in pounds.
        type: integer
        x-nullable: true
      spouseProGearWeight:
        description: The estimated weight of the pro-gear being moved belonging to a spouse in pounds.
        type: integer
        x-nullable: true
    required:
      - expectedDepartureDate
      - pickupPostalCode
      - destinationPostalCode
      - sitExpected
      - estimatedWeight
      - hasProGear
  MTOShipment:
    type: object
    properties:
      mtoServiceItems:
        description: A list of service items connected to this shipment.
        items:
          $ref: 'definitions/prime/MTOServiceItem.yaml'
        type: array
        readOnly: true
    allOf:
      - $ref: 'definitions/prime/MTOShipmentWithoutServiceItems.yaml'
  Error:
    properties:
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
        format: uuid
    required:
      - title
      - detail
    type: object
responses:
  ServerError:
    description: A server error occurred.
    schema:
      $ref: '#/definitions/Error'
  InvalidRequest:
    description: The request payload is invalid.
    schema:
      $ref: 'definitions/ClientError.yaml'
